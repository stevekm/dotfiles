##############################################################################
#   Filename: bashrc_extras
#        URL: https://github.com/stevekm/dotfiles
##############################################################################

##############################################################################
# Console Colors
##############################################################################
if [ -f "$(dirname $BASH_SOURCE)/.remote" ]; then
	# Remote servers
	export PS1="\[\033[96m\]\u\[\033[m\]@\[\033[92m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
elif [ -f "$(dirname $BASH_SOURCE)/.local" ]; then
	# Local machines
	export PS1="\[\033[96m\]\u\[\033[m\]@\[\033[31m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
else
	echo "couldn't figure out the correct PS1 to use, try running 'make remote' or 'make local' from the dotfiles dir"
fi

# enable console text colors
export CLICOLOR=1

##############################################################################
# Timestamp bash Prompt
# from here: https://wiki.archlinux.org/index.php/Color_Bash_Prompt
# ex:
# [2017-06-02 13:46:36]
# kellys04@mac01:~$
##############################################################################

command_prompt_date_string () {
	printf '\033[0;35m[%s]\033[m\n' "$(date +%F\ %T)"
}
export PROMPT_COMMAND="echo; command_prompt_date_string"

##############################################################################
# Aliases & Functions
##############################################################################
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias l='ls -Gah'
alias lt='ls -Glahtr'
alias ltt='ls -Glahtr | tail'
alias ll='ls -lah'

alias gp='git pull'
alias gpp='git pull && git push origin master'
alias gst='git status'
alias gau='git add -u'
alias gv='git remote -v'

# list all items managed by the current git repo
alias gtree='git ls-tree --full-tree -r HEAD'

# add an item to your .gitignore
gi () { echo "$1" >> .gitignore; printf "%s added to .gitignore" "$1" ; }

# keep ssh from dying due to inactivity
alias ssh='ssh -o ServerAliveInterval=60'


# Print CSV files to terminal better
# https://chrisjean.com/view-csv-data-from-the-command-line/
# NOTE: column does not handle lines over 2k in length. This limit is patched in version 9.0.6 of bsdmainutils. Unfortunately, most systems currently run 9.0.5 of that library
catcsv () {
    local myfile="$1"
    cat "$myfile" | sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S
}


# Enumerate TSV and CSV file header fields, so you know which field to 'cut' on
nheadt () {
	local input_file="$1"
	head -1 "$input_file" | tr '\t' '\n' | cat -n
}

nheadc () {
	local input_file="$1"
	head -1 "$input_file" | tr ',' '\n' | cat -n
}

# touch a file and make it executable, useful for creating new scripts quickly with a single command
touchx () { touch "$1"; chmod +x "$1"; }


# transpose a file; https://stackoverflow.com/a/1729980/5359531
t () {
	awk '
{
    for (i=1; i<=NF; i++)  {
        a[NR,i] = $i
    }
}
NF>p { p = NF }
END {
    for(j=1; j<=p; j++) {
        str=a[1,j]
        for(i=2; i<=NR; i++){
            str=str" "a[i,j];
        }
        print str
    }
}' "${1}"
}

if [ "$(uname)" == "Darwin" ]; then
    # version for mac; install with Homebrew..
    rf () {
        greadlink -f "${1:-$PWD}"
    }
else
    rf () {
        readlink -f "${1:-$PWD}"
    }
fi


# kill all processes started by the current user
alias megakill="ps u | tr -s [[:space:]] | cut -f2 -d' ' | xargs kill"

# ~~~~~ SLURM ~~~~~ #
# get node usage metrics on SLURM
alias sload='sinfo -N -O nodelist,partition,statelong,cpusstate,memory,freemem'
# https://slurm.schedmd.com/sinfo.html

# check your current SLURM jobs
alias sq="squeue -u $USER -o '%10i %15P %10T %10M %10S %12l %3C %15R %45j' --long"
# shorter version for lower res screen
alias sq2="squeue -u $USER -o '%10i %15P %10T %10M %10S %12l %3C %15R %30j' --long"

# check for screens on all Big Purple head nodes
alias screens2='for s in bigpurple-ln1 bigpurple-ln2 bigpurple-ln3 bigpurple-ln4; do ssh "$s" <<<"screen -ls" ; done'
alias screens='ls -1 /var/run/screen/S-$USER'

# count the total number of CPU cores you have allocated across all running jobs
alias scpus='squeue -u $USER -o "%T %C" | grep "RUNNING" | cut -d " " -f2 | paste -sd+ | bc'
# alias scpus='squeue -u $USER -o "%.T %.3C" | grep "RUNNING" | tr -s "[:space:]" | cut -d " " -f2 | paste -sd+ | bc'

# count all the submitted cpus
alias scpusa='squeue -u $USER -o "%C" | tail -n +2 | tr -s "[:space:]" | paste -sd+ | bc'

# check the queue stats json log on Big Purple
QSTAT_JSON="/gpfs/data/molecpathlab/pipelines/queue-stats/qstats.log"
alias qst="tail -1 ${QSTAT_JSON}"

##############################################################################
# prevent git from trying to open GUI window for password entry
##############################################################################
[ -n "$SSH_CONNECTION" ] && unset SSH_ASKPASS
# I commented this out when I couldnt clone a git repo from NYULMC github
# I re-un-commented this when I couldnt clone another git repo..


##############################################################################
# Mange the bash history better
##############################################################################
export HISTCONTROL=ignoreboth:erasedups
shopt -s histappend
export PROMPT_COMMAND="${PROMPT_COMMAND}; history -a"
export HISTFILESIZE=1000000
export HISTSIZE=1000000
